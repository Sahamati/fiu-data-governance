# Pod deployment for the business rule engine service.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business-rule-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: business-rule-engine
  template:
    metadata:
      labels:
        app: business-rule-engine
      annotations:
        container.seccomp.security.alpha.kubernetes.io/business-rule-engine-service: localhost/seccomp-policy.json
    spec:
      initContainers:
      - name: ccr-init
        image: foo.azurecr.io/ccr-init:latest
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: ["NET_ADMIN","NET_RAW"]
            drop: ["ALL"]
        command: ["/bin/sh", "setup-iptables.sh"]
      containers:
      - name: business-rule-engine-service
        image: foo.azurecr.io/business-rule-engine-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SA_URL
          value: "http://statement-analysis:8000/"
        # Environment variable used by Python Requests library to setup the proxy.
        - name: HTTP_PROXY
          value: "http://127.0.0.1:15001/"
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            drop: ["ALL"]
      - name: ccr-proxy
        image: foo.azurecr.io/ccr-proxy:latest
        ports:
        - containerPort: 15001
        command: [ "/bin/sh", "bootstrap.sh" ]
        env:
        - name: MAA_ENDPOINT
          value: "sharedneu.neu.attest.azure.net"
      - name: ccr-sidecar
        image: foo.azurecr.io/ccr-sidecar:latest
        imagePullPolicy: Always
        command: ["/bin/sh", "run.sh"]
        env:
        - name: "PORT"
          value: "8281"
        - name: "POLICY_DATA"
          value: |
            {
              "host": "127.0.0.1",
              "local": {
                "crypto_sidecar": {
                  "port": 8283
                },
                "skr_sidecar": {
                  "port": 8284
                },
                "keyprovider_sidecar": {
                  "port": 8285
                }
              },
              "services": {
                "aa_cert_registry": {
                  "uri": "http://certificate-registry.default:80"
                }
              }
            }
        - name: "BUNDLE_SERVICE_URL"
          value: "https://foo.azurecr.io"
        - name: "BUNDLE_RESOURCE_PATH"
          value: "foo.azurecr.io/depa-policies:latest"
        - name: "BUNDLE_SERVICE_CREDENTIALS_SCHEME"
          value: ""
        - name: "BUNDLE_SERVICE_CREDENTIALS_TOKEN"
          value: ""
        ports:
        - containerPort: 8281
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
      - name: crypto-sidecar
        image: foo.azurecr.io/crypto-sidecar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8283
      - name: ccr-skr-sidecar
        image: foo.azurecr.io/ccr-skr-sidecar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8284
        command: ["/bin/sh", "skr.sh", "ewogICAiY2VydGNhY2hlIjogewogICAgICAiZW5kcG9pbnQiOiAiYW1lcmljYXMudGVzdC5hY2NjYWNoZS5henVyZS5uZXQiLAogICAgICAidGVlX3R5cGUiOiAiU2V2U25wVk0iLAogICAgICAiYXBpX3ZlcnNpb24iOiAiYXBpLXZlcnNpb249MjAyMC0xMC0xNS1wcmV2aWV3IgogICB9Cn0=", "8284"]
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
      - name: inmemory-keyprovider
        image: foo.azurecr.io/inmemory-keyprovider:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8285
      volumes:
      - name: ccr-proxy-config
        configMap:
          name: ccr-proxy-config